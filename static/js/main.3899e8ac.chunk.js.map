{"version":3,"sources":["component/Navbar.js","component/TextForm.js","component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","type","id","class","onClick","toggalmode","role","for","TextForm","useState","text","setText","htmlFor","style","backgroundColor","value","onChange","event","target","rows","a","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","newText","split","join","length","Capitails","word","lower","charAt","slice","Alert","alert","msg","App","setmode","setalert","showalert","message","setTimeout","title","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3899e8ac.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"\\\">Home</a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            \r\n            \r\n\r\n           \r\n            <div class={`form-check form-switch text-${      props.mode==='light' ? 'dark' : 'light'       } `}>\r\n                <input class=\"form-check-input\"   onClick={props.toggalmode}  type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n\r\n\r\n\r\n\r\n  const changeToUpper = () => {\r\n    let a=text.toUpperCase();\r\n    setText(a);\r\n  };\r\n  const handleOnChange =(event)=>{\r\n     \r\n      setText(event.target.value);\r\n  }\r\nconst chnageTolower = () =>{\r\n  let a=text.toLowerCase();\r\n  setText(a);\r\n}\r\nconst CopyText = () =>{\r\n\r\n    var text=document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n  \r\n}\r\nconst Removespace = ()=>{\r\n  \r\n  let newText=text.split(/[ ]+/);\r\n  setText(newText.join(\" \"));\r\n\r\n}\r\nconst ClerText = ()=>{\r\n  setText('');\r\n}\r\nconst [text, setText] = useState(\"\");\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n     \r\n     <h1>Enter the Text to analyze below</h1>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"myBox\"  className=\"form-label\"></label>\r\n        <textarea className=\"form-control\"  style={{backgroundColor:   props.mode==='light' ? 'gray' : 'dark'   }} value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\"> </textarea>\r\n      </div>\r\n\r\n      <button type=\"button\" className=\"btn btn-warning\" onClick={changeToUpper}   >Convert to Uppercase </button>\r\n      <button type=\"button\" className=\"btn btn-primary mx-3\" onClick={chnageTolower}>Convert to Lowercase</button>\r\n      <button type=\"button\" className=\"btn btn-secondary mx-3\" onClick={CopyText}>Copy Text</button>\r\n      <button type=\"button\" className=\"btn btn-success mx-3\"  onClick={Removespace}>Remove Space</button>\r\n      <button type=\"button\" class=\"btn btn-dark\" onClick={ClerText}   >Clear Text</button>\r\n\r\n\r\n\r\n\r\n\r\n      <h1>Number of charcter + {text.length} of charcter</h1>\r\n      <p>{text}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nconst Capitails= (word)=>{\r\n     const lower=word.toLowerCase();\r\n     return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n}\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n             <strong> {Capitails( (props.alert.type) )}</strong> : {props.alert.msg}\r\n             <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import \"./App.css\";\nimport About from \"./component/About\";\nimport Navbar from \"./component/Navbar\";\nimport TextForm from \"./component/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./component/Alert\";\n\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n  const [alert, setalert] = useState(null);\n\n\n\n  const showalert = (message,type) =>{\n      \n      setalert({\n        msg:message,\n        type:type,\n      })\n      \n      setTimeout(() => {\n        setalert(null);\n      }, 3000);\n\n  }\n\n\n\n  const toggalmode = ()=>{\n     if(mode==='light')\n     {\n          setmode('dark');\n          document.body.style.backgroundColor='grey';\n          showalert(\"Dark mode enable\",\"success\");\n     }\n     else\n     {\n          setmode('light');\n          document.body.style.backgroundColor='white';\n          showalert(\"Light mode enable\",\"success\");\n     }\n  }\n\n\n\n\n  return (\n    \n    <>\n     \n      <Navbar  title=\"Titleutlies\" mode={mode}    toggalmode={toggalmode}/>\n\n      <Alert alert={alert}/>\n\n      <div className=\"container my-3\">\n      \n            <TextForm/>\n      </div>\n\n\n    \n    </>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Navbar from \"./component/Navbar\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}